{"version":3,"sources":["components/Loader/NavPageItem.tsx","components/Loader/NavPanel.tsx","pages/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/Loader/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["NavPageItem","link","text","className","isActive","classNames","to","NavPage","role","HomePage","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","peoples","nickName","loading","error","isSelected","people","slug","isWoman","sex","handleParentName","parentName","parent","find","name","length","map","born","died","fatherName","motherName","PeoplePage","useState","peopleList","setPeopleList","isLoading","setIsLoading","isError","setIsError","useEffect","list","catch","finally","useParams","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6fab60fc.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  link: string,\n  text: string,\n};\n\nexport const NavPageItem: React.FC<Props> = ({ link, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={link}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\n\nimport { NavPageItem } from './NavPageItem';\n\nexport const NavPage: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavPageItem link=\"/\" text=\"Home\" />\n          <NavPageItem link=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\n\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\n\nimport { Link } from 'react-router-dom';\n\nimport { Loader } from './Loader';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  peoples: Person[],\n  nickName: string,\n  loading: boolean,\n  error: boolean,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  peoples,\n  nickName,\n  loading,\n  error,\n}) => {\n  const isSelected = (people: Person) => nickName === people.slug;\n  const isWoman = (sex: string) => sex === 'f';\n\n  const handleParentName = (parentName: string | null) => {\n    const parent = peoples.find(people => people.name === parentName);\n\n    if (parent) {\n      return (\n        <Link\n          to={`/people/${parent.slug}`}\n          className={classNames({\n            'has-text-danger': isWoman(parent.sex),\n          })}\n        >\n          {parent.name}\n        </Link>\n      );\n    }\n\n    if (parentName) {\n      return parentName;\n    }\n\n    return '-';\n  };\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {(error && !loading) && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {(!peoples.length && !loading) && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {(loading && !peoples.length)\n          ? <Loader />\n          : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {peoples.map(people => {\n                  const {\n                    name,\n                    sex,\n                    born,\n                    died,\n                    fatherName,\n                    motherName,\n                    slug,\n                  } = people;\n\n                  return (\n                    <tr\n                      className={classNames({\n                        'has-background-warning': isSelected(people),\n                      })}\n                      data-cy=\"person\"\n                      key={name}\n                    >\n                      <td>\n                        <Link\n                          to={`/people/${slug}`}\n                          className={classNames({\n                            'has-text-danger': isWoman(sex),\n                          })}\n                        >\n                          {name}\n                        </Link>\n                      </td>\n\n                      <td>{sex}</td>\n                      <td>{born}</td>\n                      <td>{died}</td>\n                      <td>{handleParentName(motherName)}</td>\n                      <td>{handleParentName(fatherName)}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\n\nimport { PeopleTable } from '../components/Loader/PeopleTable';\n\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(list => {\n        setPeopleList(list);\n        setIsLoading(true);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const { slug = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <PeopleTable\n        peoples={peopleList}\n        nickName={slug}\n        loading={isLoading}\n        error={isError}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { NavPage } from './components/Loader/NavPanel';\n\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavPage />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}